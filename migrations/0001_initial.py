# Generated by Django 3.1.6 on 2021-07-01 12:58

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Cryptocurrency',
            fields=[
                ('id', models.IntegerField(help_text='CoinMarketCap ID', primary_key=True, serialize=False)),
                ('manually_added', models.BooleanField(default=False)),
                ('name', models.CharField(help_text='Cryptocurrency Name', max_length=50)),
                ('symbol', models.CharField(help_text='Cryptocurrency Symbol', max_length=50)),
                ('platform_symbol', models.CharField(blank=True, default='', help_text='Parent platform symbol', max_length=50)),
                ('platform_token_address', models.CharField(blank=True, default='', help_text='Parent platform toke address', max_length=100)),
                ('logo_url', models.URLField(blank=True, default='')),
                ('price', models.FloatField(default=0)),
                ('market_cap', models.FloatField(default=0)),
                ('last_updated', models.DateTimeField(default=django.utils.timezone.now)),
                ('full_info_json', models.JSONField(blank=True, default=dict)),
            ],
            options={
                'verbose_name': 'Cryptocurrency',
                'verbose_name_plural': 'Cryptocurrencies',
                'ordering': ['-market_cap'],
            },
        ),
        migrations.CreateModel(
            name='FourchanThreadsStatus',
            fields=[
                ('thread_id', models.IntegerField(help_text='4chan thread ID', primary_key=True, serialize=False)),
                ('last_checked', models.DateTimeField(help_text='Date and time when thread posts when read last time')),
            ],
            options={
                'verbose_name': '4chan Thread Status',
                'verbose_name_plural': '4chan Threads Statuses',
            },
        ),
        migrations.CreateModel(
            name='RedditTrackedCommunity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('community_name', models.CharField(help_text='Community username.', max_length=15)),
                ('is_active', models.BooleanField(default=True, help_text='Indicates whether community is active and will be used to search.')),
                ('last_checked', models.DateTimeField()),
            ],
            options={
                'verbose_name': 'Reddit Tracked Community',
                'verbose_name_plural': 'Reddit Tracked Communities',
            },
        ),
        migrations.CreateModel(
            name='SocialScraper',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('FOURCHAN', '4chan'), ('TWITTER', 'Twitter'), ('REDDIT', 'Reddit')], max_length=20)),
            ],
            options={
                'verbose_name': 'Social Scraper',
                'verbose_name_plural': 'Social Scrapers',
            },
        ),
        migrations.CreateModel(
            name='TwitterTrackedAccount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('twitter_username', models.CharField(help_text='Account username. Eg. twitter', max_length=15)),
                ('is_active', models.BooleanField(default=True, help_text='Indicates whether account is active and will be used to search.')),
                ('last_checked', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='SymbolBlacklistItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cryptocurrency', models.OneToOneField(help_text='Associated cryptocurrency', on_delete=django.db.models.deletion.CASCADE, related_name='blacklist', to='scraper.cryptocurrency')),
            ],
        ),
        migrations.CreateModel(
            name='CryptocurrencySocialMentions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('post_id', models.CharField(max_length=50)),
                ('title', models.TextField()),
                ('body', models.TextField()),
                ('url', models.URLField()),
                ('created_at', models.DateTimeField()),
                ('cryptocurrency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mentions', to='scraper.cryptocurrency')),
                ('scraper', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='posts', to='scraper.socialscraper')),
            ],
            options={
                'verbose_name': 'Cryptocurrency Social Mention',
                'verbose_name_plural': 'Cryptocurrency Social Mentions',
            },
        ),
    ]
